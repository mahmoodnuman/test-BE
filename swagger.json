{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "CRUD Comments and Users Operations",
    "description": "API for managing comments and users in the system"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local Development"
    },
    {
      "url": "https://comments-akyu.onrender.com",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "Comment",
      "description": "API for handling comments"
    },
    {
      "name": "User",
      "description": "API for user management"
    },
    {
      "name": "Auth",
      "description": "API for authentication and user registration"
    }
  ],
  "paths": {
    "/comment/all-comment": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "default": 1,
            "required": true,
            "description": "Page number for pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "default": 10,
            "required": true,
            "description": "Number of comments to return per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "keyword",
            "description": "Filter comments by keyword in the description",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fromDate",
            "description": "Filter comments by a date range (from date)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "toDate",
            "description": "Filter comments by a date range (to date)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "Comment"
        ],
        "summary": "Get all comments in the system",
        "responses": {
          "200": {
            "description": "List of comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/comment/user-comment/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user whose comments are to be retrieved",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page",
            "default": 1,
            "required": true,
            "description": "Page number for pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "default": 10,
            "required": true,
            "description": "Number of comments per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Comment"
        ],
        "summary": "Get comments for a specific user",
        "responses": {
          "200": {
            "description": "List of comments for the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/comment/add-comment": {
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Create a new comment in the system",
        "requestBody": {
          "description": "Comment data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid data"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/comment/add-rating/{commentId}": {
      "post": {
        "tags": [
          "Comment"
        ],
        "summary": "Add a rating to a comment",
        "parameters": [
          {
            "in": "path",
            "name": "commentId",
            "required": true,
            "description": "ID of the comment to rate",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Rating data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Rating"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Rating added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid data"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/comment/edit-comment/{id}": {
      "put": {
        "tags": [
          "Comment"
        ],
        "summary": "Edit an existing comment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the comment to edit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated comment data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid data"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/comment/delete-comment/{id}": {
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "Delete a specific comment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the comment to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comment deleted"
          },
          "404": {
            "description": "Comment not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login to the system",
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid login data"
          }
        }
      }
    },
    "/auth/createAccount": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create a new user account",
        "requestBody": {
          "description": "User registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid data"
          }
        }
      }
    },
    "/auth/users": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get all users",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "default": 1,
            "required": true,
            "description": "Page number for pagination",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "default": 10,
            "required": true,
            "description": "Number of users per page",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/auth/user/{id}": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Update an existing user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated user data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid data"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Auth"
        ],
        "summary": "Delete a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/auth/user-status/{id}": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Change user status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID of the user whose status is to be changed",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User status update data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserStatusUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User status changed successfully"
          },
          "400": {
            "description": "Bad request, invalid data"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Comment": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ratings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rating"
            }
          },
          "averageRating": {
            "type": "number"
          }
        }
      },
      "Rating": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 5
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "profilePicture": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ]
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "In-Active"
            ]
          }
        }
      },
      "UserStatusUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "Active",
              "In-Active"
            ]
          }
        },
        "required": [
          "status"
        ]
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "user",
              "admin"
            ]
          }
        },
        "required": [
          "email",
          "username",
          "firstName",
          "lastName",
          "role"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
